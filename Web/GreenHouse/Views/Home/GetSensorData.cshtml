@model GreenHouse.ViewModels.SensorDataViewModel

@{
    ViewBag.Title = "Sensor data";
    Layout = "~/Views/_Layout.cshtml";   
        
}
<script src="~/Scripts/jquery.signalR-2.2.0.min.js"></script>
<script src="~/signalr/hubs"></script>
<script src="~/Script/Chart.min.js"></script>


<canvas id="Now" width="1175" height="587" style="width: 1175px; height: 587px;"></canvas>

<canvas id="Day" width="500" height="300" style="width: 500px; height: 300px;"></canvas>
<canvas id="Week" width="500" height="300" style="width: 500px; height: 300px;"></canvas>
<canvas id="Month" width="500" height="300" style="width: 500px; height: 300px;"></canvas>
<canvas id="Year" width="500" height="300" style="width: 500px; height: 300px;"></canvas>


<script src="~/Scripts/ChartDataLogic.js"></script>

<script type="text/javascript">

    var MONTHS = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
    var randomScalingFactor = function () {
        return Math.round(Math.random() * 100 * (Math.random() > 0.5 ? -1 : 1));
    };
    var randomColorFactor = function () {
        return Math.round(Math.random() * 255);
    };
    var randomColor = function (opacity) {
        return 'rgba(' + randomColorFactor() + ',' + randomColorFactor() + ',' + randomColorFactor() + ',' + (opacity || '.3') + ')';
    };


    window.onload = function () {
        //DrowChart();
    };

    //signalR
    $(function(){
        var hub = $.connection.sensorDataHub;
        hub.client.send = function(message){
            console.log(message);            
        }

        hub.client.loadData = function(data){
            //todo: implement
            console.log("load data");
            //DrowChart();
        };

        var config = {};

        hub.client.addData = function (data) {

            //TODO: implement
            console.log("add data");
            for(var i=0; i<data.Timestamps.length;i++)
            {
                config.data.labels.shift();
                config.data.labels.push(data.Timestamps[i]);

                for(var j=0; j< config.data.datasets.length;j++)
                {
                    config.data.datasets[j].data.shift();
                    var dataSetName = config.data.datasets[j].label;
                    var newValue = NaN;
                    for(var k=0; k< data.DataSets.length;k++)
                    {
                        var newDataSetName = data.DataSets[k].label;
                        if(dataSetName===newDataSetName)
                            newValue = data.DataSets[k].data[i];
                    }
                    config.data.datasets[j].data.push(newValue);     
                    
                }
            }
            window.Now.update();
        }
        $.connection.hub.start().done(function () {           
            //hub.server.getData(); 
            //DrowChart();
            LoadAll(config);
        });

        function DrowChart (){
            var ctx = document.getElementById("canvas").getContext("2d");
            window.myLine = new Chart(ctx, config);
        };
    });

</script>

