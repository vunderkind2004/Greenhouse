@model GreenHouse.ViewModels.SensorDataViewModel

@{
    ViewBag.Title = "Sensor data";
    Layout = "~/Views/_Layout.cshtml";   
        
}

<script src="~/Script/Chart.min.js"></script>


<canvas id="canvas" width="1175" height="587" style="width: 1175px; height: 587px;"></canvas>

@if (Model!=null && Model.DataSets.Any())
{
    <table class="table table-hover">
        <tr>
            <th>Date</th>
            @foreach (var dataSet in Model.DataSets)
            {
                <th>
                    @dataSet.Label
                </th> 
            }            
        </tr>
    
        
        @for (var i = 0; i < Model.Timestamps.Length; i++ )
        {
        <tr>
            <td>@Model.Timestamps[i]</td>
            @foreach (var dataSet in Model.DataSets)
            {
                <td>
                    @dataSet.Data[i]
                </td> 
            }   
        </tr>
    
        }
    </table>
}

<script type="text/javascript">

    var MONTHS = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
    var randomScalingFactor = function () {
        return Math.round(Math.random() * 100 * (Math.random() > 0.5 ? -1 : 1));
    };
    var randomColorFactor = function () {
        return Math.round(Math.random() * 255);
    };
    var randomColor = function (opacity) {
        return 'rgba(' + randomColorFactor() + ',' + randomColorFactor() + ',' + randomColorFactor() + ',' + (opacity || '.3') + ')';
    };


    var config = {
        type: 'line',
        //data: {
        //    labels: ["January", "February", "March", "April", "May", "June", "July"],
        //    datasets: [{
        //        label: "My First dataset",
        //        data: [randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor()],
        //        fill: false,
        //        borderDash: [5, 5],
        //    }, {
        //        label: "My Second dataset",
        //        data: [randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor()],
        //        fill: false,
        //        borderDash: [5, 5],
        //    }, {
        //        label: "My Third dataset - No bezier",
        //        data: [randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor()],
        //        lineTension: 0,
        //        fill: false,
        //    }, {
        //        label: "My Fourth dataset",
        //        data: [randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor()],
        //        fill: false,
        //    }]
        //},
        data: {
            labels:  @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Timestamps)),
            datasets: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.DataSets))
        },
        options: {
            responsive: true,
            legend: {
                position: 'bottom',
            },
            hover: {
                mode: 'label'
            },
            scales: {
                xAxes: [{
                    display: true,
                    scaleLabel: {
                        display: true,
                        labelString: 'Time'
                    }
                }],
                yAxes: [{
                    display: true,
                    scaleLabel: {
                        display: true,
                        labelString: 'Value'
                    }
                }]
            },
            title: {
                display: true,
                text: '@ViewBag.Title'
            }
        }
    };


    //$.each(config.data.datasets, function (i, dataset) {
    //    var background = randomColor(0.5);
    //    dataset.borderColor = background;
    //    dataset.backgroundColor = background;
    //    dataset.pointBorderColor = background;
    //    dataset.pointBackgroundColor = background;
    //    dataset.pointBorderWidth = 1;
    //});


    window.onload = function () {
        var ctx = document.getElementById("canvas").getContext("2d");
        window.myLine = new Chart(ctx, config);
    };
</script>
}